<!--This is a note to not forget what I learn on codeacademy as I progress in my
full stack developper's learning-->

<!--HTML LEARNING-->

<!DOCTYPE html>

<html>

    <head> 
      <title> Name appearing in the tab </title>
    </head>

    <body>
      <!--ATTRIBUTE SYNTAX-->
      <a href="url link" target="_blank">url name</a> <!--redirecting in a local folder
      and in a new page because of target-->
      <a href="./url link" target="_blank">url name</a> <!--redirecting in a local 
      folder and in a new page because of target-->

      <img src="url image link" alt="image name" /> <!--You can put this line in a 
      <a href=""> <a> anchor to make the image redirect to another website-->
      <video src="url=link" height="" width="" controls> <!--self containing element-->
      what appears when not supported
      </video>
      <!--Use src for embbeded image or video and href for external redirecting link-->
      
      <div id="introduction">
      </div>
      <div id="Development">
      </div>
      <!--div are for separating paragraph and allow us to make de section easier to
      read-->
      <a href="#introduction">name of the redirecting link</a> <!--This line will redirect me
      to the div introduction 
      section-->
      <--Use section instead of div bc div is a non semantic tag/ section is usually used for
        identification (id) purpose-->

      <th scope="col or row">Saturday</th> <!--The scope indicate if it's a row or col heading
      <td colspan or rowspan="2">Out of Town</td> <!--put the same value in 2 consecutive columns or columns-->

      <audio controls>
        <source src="" type="audio/mp3">
      </audio> <!-- AUDIO SYNTAX-->

      <link href='./style.css' rel="stylesheet"/> <!--syntax for linkintg css to html-->

    </body>

</html>

<!--GENERAL KNOWLEDGE
-Always have 2 spaces identation between parent and child element
-All HTML code must be nested within html
-The title tag should only exist in the head tag
-Table : tr-table row; td-table data; th-Table head; 
- only the column headings go under the <thead> element. We can use the scope attribute
on <th> elements to indicate whether a <th> element is being used as a "row" heading or a "col" heading.        
-->




<!--CSS LEARNING-->




<!--GENERAL KNOWLEDGE
- To select an HTML element by its class using CSS, a period (.) must be prepended to the class’s name/ by its id, a # must prepended (ajouté au début)
- if we want to apply a style to different html element, we can use the attribute class=""(selector .classname in css); for a single element we can use id and the #id selector in css
- CSS pseudo-classes are used to add styles to selectors, but only when those selectors meet certain conditions (syntax selector:pseudoclass
- type < class < id (less specific to most specific) the more specicific selector will override the less specific one
- For nested element like <li></li> inside <ul></ul>, the selector in CSS is: .classname elementname
-you can put a comma betwwwn two unrelated selector for applyimg the same style : element,element (it can be 2 different element)
-In positionning, relative position the element depending to where it would've been, but absolute positions the element relative to where the parent element is currently
-->



<!--FLEXBOX LEARNING-->

<!--GENERAL KNOWLEDGE
display: flex changes an element to a block-level container with flex items inside of it.
display: inline-flex allows multiple flex containers to appear inline with each other.
justify-content is used to space items along the main axis.
align-items is used to space items along the cross axis.
flex-grow is used to specify how much space (and in what proportions) flex items absorb along the main axis.
flex-shrink is used to specify how much flex items shrink and in what proportions along the main axis.
flex-basis is used to specify the initial size of an element styled with flex-grow and/or flex-shrink.
flex is used to specify flex-grow, flex-shrink, and flex-basis in one declaration.
flex-wrap specifies that elements should shift along the cross axis if the flex container is not large enough.
align-content is used to space rows along the cross axis.
flex-direction is used to specify the main and cross axes.
flex-flow is used to specify flex-wrap and flex-direction in one declaration.
Flex containers can be nested inside of each other by declaring display: flex or display: inline-flex for children of flex containers.-->
